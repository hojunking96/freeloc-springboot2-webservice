*스프링 특징
1. Framework = 틀,동작(틀을 벗어나지 않고 틀에 맞춰 개발하게 함)
2. 오픈 소스(무료, 소스코드 공개, 내부 -> 뜯어고칠 수 있음=>기여 가능)
3.IoC 컨테이너를 가짐(Inversion of Controll = 제어의 역전
-> 주도권이 스프링에 있음)

class -> 설계도(가구, 추상적)
object -> 실체화가 가능한 것 (의자, 침대)
Instance -> 실체화 된 것(현실에서 직접 본 것)

=> 스프링이 객체(붕어빵, 사자 등)를 스캔해서 heap 메모리에 띄움

4.DI를 지원한다(Dependency Injection)
=>스프링이 객체를 관리하기 때문에 메소드를 공유하여 사용 가능(싱글톤)

5.엄청나게 많은 필터를 가지고 있다.
=>권한에 따라 허용,거부 하는 필터 존재
6.어노테이션이 많다.
어노테이션=컴파일러가 읽는 주석
@Component =>클래스 메모리에 로딩(heap/memory에 띄움)
@Autowired => 로딩된 객체를 해당 변수에 집어 넣어
리플렉션 = 분석하는 기법 => 런타임시 분석

JPA란? (Java Persistenc API) 자바의 데이터를 영구히 기록하는 환경을 제공하는 API
API란? (Application Programing Interface) 
인터페이스 = 상하관계가 존재하는 약속
프로토콜 = 상하관계가 없는 약속

http: 소켓(운영체제 내)로 만듬
 
웹서버: 흔히 아파치 사용
자원을 request하면 response함
.jsp(자바 코드)요청 시 응답을 못함
따라서, 톰켓을 추가해서 자바 관련 파일을 처리 가능하게 함
(jsp 파일 컴파일 -> .html에 덮어씌움 ->아파치에 전달)


